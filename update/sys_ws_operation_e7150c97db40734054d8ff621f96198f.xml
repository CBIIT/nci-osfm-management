<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>POST</http_method>
        <name>addAsset</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	var data = request.body.data;
	var method = data.method.toString();
	var id = '';
	if(method == 'insert'){
		var model1 = new GlideRecord('x_naci_e_tracking_model');
		    model1.initialize();
		    model1.cost = data.unit_cost.toString();
		    model1.description = data.description.toString();
		    model1.manufacture = data.manufacture.toString();
			model1.model_number = data.model_number.toString();
		    model1.name = data.name.toString();
			id = model1.insert();
		    id = checkAssets(id);
	}else if(method == 'update'){
		//model exist and update model
		var model2 = new GlideRecord('x_naci_e_tracking_model');
		    model2.addQuery('model_number', data.model_number.toString());
		    model2.query();
		    model2.next();
			model2.cost = data.unit_cost.toString();
		    model2.description = data.description.toString();
		    model2.manufacture = data.manufacture.toString();
		    model2.name = data.name.toString();
		    id = model2.update();
		    id = checkAssets(id);
	}else if(method == 'check'){
		//check model exist
		var model = new GlideRecord('x_naci_e_tracking_model');
		    model.addQuery('model_number', data.model_number.toString());
		    model.query();
		var count = model.getRowCount();
		if(count == 0){
			id = '0';
		}else{
			id = '1';
		}
	}
    
	return id;
	
	function checkAssets(model_id){
		var asset_id = '';
		//determine assets exist or not. If yes, update total. or insert a new record in assets table.
		var asset = new GlideRecord('x_naci_e_tracking_etrack_assets');
		    asset.addQuery('model.sys_id', model_id);
		    asset.addQuery('stockroom.sys_id', data.stockroom);
		asset.query();
		var count1 = asset.getRowCount();
		if(count1 == 0){
			//add new asset
			asset_id = addAssets(model_id);
		}else{
			//assets exist, add amount to total of assets 
			asset_id = updateAssets(model_id);
		}
		
		return asset_id;
	}
	
	function addAssets(model_id){
		var asset1 = new GlideRecord('x_naci_e_tracking_etrack_assets'); 
			asset1.initialize();
			asset1.barcode = data.barcode.toString();
			asset1.model = model_id;
		    asset1.owner = data.ownerId;
		    asset1.quantity = data.quantity;
			asset1.stockroom = data.stockroom;
			var asset_id = asset1.insert();
		return asset_id;
	}
	
	function updateAssets(model_id){
		var asset2 = new GlideRecord('x_naci_e_tracking_etrack_assets');
			asset2.addQuery('model.sys_id', model_id);
		    asset2.addQuery('stockroom.sys_id', data.stockroom);
			asset2.query();
			asset2.next();
		    var quantity = asset2.quantity.toString();
			if(data.quatity === null || data.quantity.toString().trim().length == 0){
				data.quantity = "0";
			}
		    var quantityNum = parseInt(quantity) + parseInt(data.quantity.toString());
			asset2.quantity = quantityNum;
			asset2.barcode = data.barcode.toString();
			asset2.model = model_id;
		    asset2.owner = data.ownerId;
			asset2.stockroom = data.stockroom;
		    var asset_id = asset2.update();
		 return asset_id;
	}
	
})(request, response);

]]></operation_script>
        <operation_uri>/api/x_naci_e_tracking/etrack_rest_api/addAsset</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/addAsset</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>zhoujim@nih.gov</sys_created_by>
        <sys_created_on>2019-03-12 17:33:23</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>e7150c97db40734054d8ff621f96198f</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name>addAsset</sys_name>
        <sys_package display_value="NCI Equipment Tracking System" source="x_naci_e_tracking">0d1eac28dbbfaf0054d8ff621f9619b2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NCI Equipment Tracking System">0d1eac28dbbfaf0054d8ff621f9619b2</sys_scope>
        <sys_update_name>sys_ws_operation_e7150c97db40734054d8ff621f96198f</sys_update_name>
        <sys_updated_by>zhoujim@nih.gov</sys_updated_by>
        <sys_updated_on>2019-03-13 15:12:49</sys_updated_on>
        <web_service_definition display_value="ETrack REST API">ac0dd2b6db00334054d8ff621f96192b</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
