<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $log, $http, etrackingAddStockroom, $mdDialog, $state, ETrackingUtil) {
	/* widget controller */
	var c = this;
	var myUserId = c.data.info.my_sys_id;
	$scope.form = {userId: ""};
	$scope.backPageId = ETrackingUtil.getBackPage('Stockroom');
	c.form = getFormValues();

	$("#ownerName").autocomplete({
		delay: 300,
		source: function(request, response) {
			$('.ui-autocomplete').css('display', 'block');
			var term = $('#ownerName').val();
			c.form.ownerId = "";
			response([]);
			if (term.length < 4) {
				return;
			}
			var temp = '';
			if (term.indexOf(',') >= 0) {
				temp = term.split(',');
				var length = temp.length;
				if (length > 1) {
					term = temp[1].trim() + " " + temp[0].trim();
				} else {
					term = temp[0];
				}
			}
			var req = {
				method: 'GET',
				url: '/api/x_naci_account_act/accountactivationscoped/fetchUserList',
				beforeSend: function(xhr) {
					xhr.setRequestHeader('X-UserToken', window.g_ck);
				},
				headers: {
					'Content-Type': 'application/json'
				},
				params: {
					'term': term
				}
			};
			$http(req).then(handleResponse, handleError);

			function handleResponse(responseData) {
				var result = responseData.data.result;
				response(result);
			}

			function handleError(response) {
				console.error(response);
				alert('ERROR');
			}
		},
		autoFocus: true,
		select: function(event, ui) {
			var sys_id = ui.item.id;
			var name = ui.item.value;
			if (sys_id != null && sys_id.trim().length > 1) {
				$scope.form.userId = sys_id;
			} else {
				$scope.form.userId = "";
			}
			if (sys_id != null && sys_id.trim().length > 1) {
				c.form.owner = name;
				c.form.ownerId = sys_id;
			} else {
				c.form.owner = "";
				c.form.ownerId = "";
			}

			//$('#content').css('height', '550px');
			$scope.$apply();
		}
	});





	/*--------- ----------- */

	$scope.$watch('c.form.owner', function(){
		if(c.form.ownerId == "" || c.form.ownerId == null){
			c.form.owner = "";
		}
	});

	/*--------- ----------- */
	$scope.addStockroom = function(){
		if(c.form.ownerId == "" || c.form.ownerId == null){
			c.form.owner = "";
			return;
		}
		// check if stockrooom name exist 
		c.form.method = "check";
		etrackingAddStockroom.checkStockroom(c.form)
			.then(function(res){
			var id = res.data.result;
			if (id == "0"){
				insertStockroom("insert");
				$state.go("stockrooms")
			}else if(id == "1"){	
				$mdDialog.show(
					$mdDialog.alert()
					.parent(angular.element(document.querySelector('#popupContainer')))
					.clickOutsideToClose(true)
					.htmlContent("<h4><b>" + c.form.name+ " </b>already exist</h4>"+
											 "<p>Please enter a unique stockroom name.</p>")
					.ok('OK')
				);
				return

				/**
				var confirm = $mdDialog.confirm()
				.title('Are you sure you want to update it? ')
				.textContent('Stockroom already exists')
				.ok('YES')
				.cancel('NO');
				$mdDialog.show(confirm).then(function() {
					insertStockroom("update", "Stockroom has been updated successfully");
					$state.go("stockrooms")
				}, function() {
				});**/

			}

		}, function(err){
			$log.log(err);
			alert("ERROR");
		});

	}

	function insertStockroom(method){
		c.form.ownerId = $scope.form.userId;
		c.form.method = method;

		etrackingAddStockroom.addStockroom(c.form)
			.then(function(res){
			$mdDialog.show(
				$mdDialog.alert()
				.parent(angular.element(document.querySelector('#popupContainer')))
				.clickOutsideToClose(true)
				.htmlContent("<h4><b>" + c.form.name+ " </b>has been successfully created</h4>")
				.ok('OK')
			);

			$log.log(res);
		}, function(err){
			$log.log(err);
			alert("ERROR");
		});
	}


	function getFormValues() {
		return {
			name: "",
			description: "",
			location: "",
			owner: "",
			type: ""
		}
	}

	$scope.doTheBack = function() {
		window.history.back();
	};

}]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>etrack_add_stockroom</id>
        <internal>false</internal>
        <link/>
        <name>Etrack Add Stockroom</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	var my_sys_id = gs.getUserID();
	data.admin = gs.getUser().isMemberOf("ETracking_Admin")
	data.info = {my_sys_id: my_sys_id}

	data.types = [];
	var stockroomTypes = new GlideRecord('x_naci_e_tracking_stockroom_type');
	stockroomTypes.orderBy("name");
	stockroomTypes.query();

	while (stockroomTypes.next()){
		var item = {};
		item.id = stockroomTypes.sys_id.toString();
		item.name = stockroomTypes.name.toString();
		data.types.push(item)
	}

	data.locations = [];
	var locations = new GlideRecord('x_naci_e_tracking_location');
	locations.orderBy('name');
	locations.query();
	while(locations.next()){
		var item = {};
		item.id = locations.sys_id.toString();
		item.name = locations.name.toString();
		data.locations.push(item);
	}
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>abdullahz2@nih.gov</sys_created_by>
        <sys_created_on>2019-03-06 16:54:24</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>b4734dd9db0c7f00b86770c08c9619d9</sys_id>
        <sys_mod_count>150</sys_mod_count>
        <sys_name>Etrack Add Stockroom</sys_name>
        <sys_package display_value="NCI Equipment Tracking System" source="x_naci_e_tracking">0d1eac28dbbfaf0054d8ff621f9619b2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NCI Equipment Tracking System">0d1eac28dbbfaf0054d8ff621f9619b2</sys_scope>
        <sys_update_name>sp_widget_b4734dd9db0c7f00b86770c08c9619d9</sys_update_name>
        <sys_updated_by>abdullahz2@nih.gov</sys_updated_by>
        <sys_updated_on>2019-04-11 19:10:46</sys_updated_on>
        <template><![CDATA[<div ng-controller="c" ng-cloak ng-show="c.data.admin">
  <md-card>
    <md-toolbar>
      <div class="md-toolbar-tools">
        <h2 flex md-truncate>Add Stockroom</h2>
      </div>
    </md-toolbar>
    <md-subheader class="md-primary">Please make sure the stockroom does not already exist before creating a new one.</md-subheader>
    <md-card-content>
      <form name="userForm">
        <div layout="column">
          <h4>
            Stockroom information
          </h4>
          <md-input-container class="md-block" flex-gt-sm>
            <label> Stockroom name</label>
            <input  ng-required="true" name="stockroomName" ng-model="c.form.name" />
          </md-input-container>
          
          <md-input-container class="md-block">
            <label>Description</label>
            <textarea ng-model="c.form.description"  name="stopACDesc"  ng-required="true" md-select-on-focus></textarea>
          </md-input-container>


          <md-input-container class="md-block" flex-gt-sm>
            <label>Location</label>
            <md-select  ng-required="true" ng-model="c.form.location">
              <md-option ng-repeat="location in c.data.locations" value="{{location.id}}">
                {{location.name}}
              </md-option>
            </md-select >
          </md-input-container>
          
          <md-input-container class="md-block" flex-gt-sm>
            <label>Owner</label>
            <input id="ownerName"  ng-required="true" name="stopAC" ng-model="c.form.owner"  ng-model-options="{ updateOn: 'blur' }" />
            <div ng-messages="userForm.stopAC.$error">
              <div ng-message="required">
                Please select a valid owner
              </div>
            </div>
          </md-input-container>
          
          <md-input-container class="md-block" flex-gt-sm>
            <label>Type</label>
            <md-select ng-required="true" ng-model="c.form.type">
              <md-option ng-repeat="type in c.data.types" value="{{type.id}}">
                {{type.name}}
              </md-option>
            </md-select >
          </md-input-container>

        </div>
        <br>
        <div class="d-flex justify-content-center">
           <md-button
                     type="submit" 
                     ng-disabled="userForm.$invalid" 
                     ng-click="userForm.$valid && addStockroom()" 
                     class="md-raised md-primary">Submit</md-button>
           <!--md-button ng-href="#!/{{backPageId}}" class="md-raised">Cancel</md-button-->
           <md-button ng-click="doTheBack()" class="md-raised">Back</md-button>
        </div>
      </form>
    </md-card-content>
  </md-card>
</div>]]></template>
    </sp_widget>
</record_update>
