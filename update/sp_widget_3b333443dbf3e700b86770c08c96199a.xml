<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, $q, $timeout, $log, $http, etrackAddAssets, $mdDialog) {
	/* widget controller */
	var c = this;
	$scope.form = {userId: ""};
	c.form = getFormValues();
	c.data.existingModels = loadAllModels();
	c.querySearch = querySearch;
	c.selectedItemChange = selectedItemChange;

		$("#ownerName").autocomplete({
			delay: 300,
			source: function(request, response) {
				$('.ui-autocomplete').css('display', 'block');
				var term = $('#ownerName').val();
				response([]);
				if (term.length < 4) {
					return;
				}
				var temp = '';
				if (term.indexOf(',') >= 0) {
					temp = term.split(',');
					var length = temp.length;
					if (length > 1) {
						term = temp[1].trim() + " " + temp[0].trim();
					} else {
						term = temp[0];
					}
				}
				var req = {
					method: 'GET',
					url: '/api/x_naci_account_act/accountactivationscoped/fetchUserList',
					beforeSend: function(xhr) {
						xhr.setRequestHeader('X-UserToken', window.g_ck);
					},
					headers: {
						'Content-Type': 'application/json'
					},
					params: {
						'term': term
					}
				};
				$http(req).then(handleResponse, handleError);

				function handleResponse(responseData) {
					var result = responseData.data.result;
					response(result);
				}

				function handleError(response) {
					console.error(response);
					alert('ERROR');
				}
			},
			autoFocus: true,
			select: function(event, ui) {


				var sys_id = ui.item.id;
				var name = ui.item.value;
				if (sys_id != null && sys_id.trim().length > 1) {
					$scope.form.userId = sys_id;
				} else {
					$scope.form.userId = "";
				}
				if (sys_id != null && sys_id.trim().length > 1) {

					c.form.owner = name;
					c.form.ownerId = sys_id;
				} else {
					c.form.owner = "";
					c.form.ownerId = "";
				}

				//$('#content').css('height', '550px');
				$scope.$apply();
			}
		});

		/**
     * Search for barcodes
     */
		function querySearch(query) {
			var results = query ? c.data.existingModels.filter(createFilterFor(query)) : c.data.existingModels,
					deferred;
			if (c.simulateQuery) {
				deferred = $q.defer();
				$timeout(function() {
					deferred.resolve(results);
				}, Math.random() * 1000, false);
				return deferred.promise;
			} else {
				return results;
			}
		}

		function selectedItemChange(item) {
			updateFromValues({
				"name": "test Name",
				"manufacture": "test manufacture",
				"model_number": "test model_number",
				"description": "test description"
			});
		}	

		/**
     * Build `models` list of key/value pairs
     */
		function loadAllModels() {
			var test_data = '23423, 21345234, 123ed312ed23, bodsf34, qweew34, zzzzzrs, 3421efcwef431, dfdsqfreqr23';
			return test_data.split(/, +/g).map(function(barcode) {
				return {
					value: barcode.toLowerCase(),
					display: barcode
				};
			});
		}

		/**
     * Create filter function for a query string
     */
		function createFilterFor(query) {
			var lowercaseQuery = query.toLowerCase();
			return function filterFn(barcode) {
				return (barcode.value.indexOf(lowercaseQuery) === 0);
			};


		}

		function updateFromValues(update_form){
			Object.assign(c.form, {"name": "test Name",
														 "manufacture": "test manufacture",
														 "model_number": "test model_number",
														 "description": "test description"})

		}

		function getFormValues() {
			return {
				name: null,
				manufacture: null,
				description: null,
				model_number: null,
				unit_cost: null,
				owner_custodian: null,
				quantity: null,
				stockroom: null
			}
		}
	
	
	$scope.addAsset = function(){
		c.form.method = "check";
		etrackAddAssets.proccessModel(c.form).then(function(res){
			
			if (res.data.result == "0"){
				insertModel("insert", "Assest(s) have been created successfully!");
			}else{
				var confirm = $mdDialog.confirm()
				.title('Are you sure you want to update it? ')
				.textContent('Porduct model already exists, if you choose to update, the model name and manufacturer will be updated')
				.ok('YES')
				.cancel('NO');
				$mdDialog.show(confirm).then(function() {
					insertModel("update", "Assest(s) have been created successfully!");
				}, function() {


				});
				
				
			}
			$log.log(res);
		}, function(err){
			$log.log(err);
			alert("ERROR");
		});
		
	}
	
	function insertModel(method, msg){
		c.form.method = method;
		etrackAddAssets.proccessModel(c.form).then(function(res){
			$mdDialog.show(
				$mdDialog.alert()
				.parent(angular.element(document.querySelector('#popupContainer')))
				.clickOutsideToClose(true)
				.title(msg)
				.ok('OK')
			);

			$log.log(res.data.result);
		}, function(err){
			$log.log(err);
			alert("ERROR");
		});
		
		
	}
	
	


}]]></client_script>
        <controller_as>c</controller_as>
        <css>
.md-errors-spacer { display: none; }</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>etrack_add_assets</id>
        <internal>false</internal>
        <link/>
        <name>Etrack Add Assets</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
  var user = gs.getUser();

	data.isLoggedIn = gs.getSession().isLoggedIn();
	
	data.manufactures = [];
	
	var manufacture = new GlideRecord('x_naci_e_tracking_manufacture');
			manufacture.orderBy("name");
			manufacture.query();
	while(manufacture.next()){
		item = {};
		item.id = manufacture.sys_id.toString();
		item.name = manufacture.name.toString();
		data.manufactures.push(item);
	}
	
	data.stockrooms = [];
	
	var stockroom = new GlideRecord('x_naci_e_tracking_stock_room');
			stockroom.orderBy("name");
			stockroom.query();
	while(stockroom.next()){
		item = {};
		item.id = stockroom.sys_id.toString();
		item.name = stockroom.name.toString();
		data.stockrooms.push(item);
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>abdullahz2@nih.gov</sys_created_by>
        <sys_created_on>2019-02-27 15:57:17</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3b333443dbf3e700b86770c08c96199a</sys_id>
        <sys_mod_count>211</sys_mod_count>
        <sys_name>Etrack Add Assets</sys_name>
        <sys_package display_value="NCI Equipment Tracking System" source="x_naci_e_tracking">0d1eac28dbbfaf0054d8ff621f9619b2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NCI Equipment Tracking System">0d1eac28dbbfaf0054d8ff621f9619b2</sys_scope>
        <sys_update_name>sp_widget_3b333443dbf3e700b86770c08c96199a</sys_update_name>
        <sys_updated_by>abdullahz2@nih.gov</sys_updated_by>
        <sys_updated_on>2019-03-12 22:23:02</sys_updated_on>
        <template><![CDATA[<div ng-controller="c" ng-cloak>
  <md-card>
    <md-toolbar>
      <div class="md-toolbar-tools">
        <h2 flex md-truncate>Add Assets</h2>
      </div>
    </md-toolbar>
    <md-subheader class="md-primary">If the Model exist, please select one. Otherwise a new model will be created for this asset.</md-subheader>
    <md-card-content>
      <form name="userForm">
        <div layout="column">
          <label>Search existing Model</label>
          <md-autocomplete 
                           md-selected-item="c.selectedItem"
                           md-search-text="c.searchText" 
                           md-selected-item-change="c.selectedItemChange(item)" 
                           md-items="item in c.querySearch(c.searchText)" 
                           md-item-text="item.display"
                           md-min-length="0" 
                           placeholder="Enter Barcode" 
                           input-aria-labelledby="favoriteStateLabel" 
                           input-aria-describedby="autocompleteDetailedDescription">
            <md-item-template>
              <span md-highlight-text="c.searchText" md-highlight-flags="^i">{{item.display}}</span>
            </md-item-template>
            <md-not-found>
              No assets matching " {{c.searchText}} " were found.
            </md-not-found>
          </md-autocomplete>
          <br>
          <h4>
            Model Information
          </h4>
          <md-input-container class="md-block" flex-gt-sm>
            <label>Name</label>
            <input required name="name" ng-model="c.form.name" />
          </md-input-container>

          <md-input-container class="md-block" flex-gt-sm>
            <label>Manufacture</label>
            <md-select required ng-model="c.form.manufacture">
              <md-option ng-repeat="manufacture in c.data.manufactures" value="{{manufacture.id}}">
                {{manufacture.name}}
              </md-option>
            </md-select >
          </md-input-container>


          <md-input-container class="md-block">
            <label>Description</label>
            <textarea ng-model="c.form.description" required md-maxlength="150" rows="3" md-select-on-focus></textarea>
          </md-input-container>
          <md-input-container class="md-block" flex-gt-sm>
            <label>Model Number</label>
            <input required name="model_number" ng-model="c.form.model_number" />
          </md-input-container>

          <md-input-container class="md-block" flex-gt-sm>
            <label>Unit Cost</label>
            <input required name="unit_cost" ng-model="c.form.unit_cost" />
          </md-input-container>

          <h4>
            Asset Information
          </h4>

          <md-input-container class="md-block" flex-gt-sm>
            <label>Owner</label>
            <input id="ownerName" required name="owner" ng-model="c.form.owner" />
          </md-input-container>
          <md-input-container class="md-block" flex-gt-sm>
            <label>Quantity</label>
            <input required name="quantity" ng-model="c.form.quantity" />
          </md-input-container>

          <md-input-container class="md-block" flex-gt-sm>
            <label>Stockroom</label>
            <md-select required ng-model="c.form.stockroom">
              <md-option ng-repeat="stockroom in c.data.stockrooms" value="{{stockroom.id}}">
                {{stockroom.name}}
              </md-option>
            </md-select >
          </md-input-container>


        </div>
        <br>
        <div class="d-flex justify-content-center">
          <md-button ng-click="addAsset()" class="md-raised md-primary">Submit</md-button>
        </div>
      </form>


    </md-card-content>
  </md-card>
  {{ c.form | json }} {{ form | json }}
</div>]]></template>
    </sp_widget>
</record_update>
