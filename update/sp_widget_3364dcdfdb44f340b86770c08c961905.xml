<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($stateParams, $log, $scope, $http, etrackingAddStockroom, $mdDialog, ETrackingUtil) {
	console.log($stateParams);

	/* widget controller */
	var c = this;
	loadAssets();
	$scope.backPageId = ETrackingUtil.getBackPage('Stockroom');
	$("#ownerName").autocomplete({
		delay: 300,
		source: function(request, response) {
			$('.ui-autocomplete').css('display', 'block');
			var term = $('#ownerName').val();
			c.data.stockroom.ownerId = "";
			response([]);
			if (term.length < 4) {
				return;
			}
			var temp = '';
			if (term.indexOf(',') >= 0) {
				temp = term.split(',');
				var length = temp.length;
				if (length > 1) {
					term = temp[1].trim() + " " + temp[0].trim();
				} else {
					term = temp[0];
				}
			}
			var req = {
				method: 'GET',
				url: '/api/x_naci_account_act/accountactivationscoped/fetchUserList',
				beforeSend: function(xhr) {
					xhr.setRequestHeader('X-UserToken', window.g_ck);
				},
				headers: {
					'Content-Type': 'application/json'
				},
				params: {
					'term': term
				}
			};
			$http(req).then(handleResponse, handleError);

			function handleResponse(responseData) {
				var result = responseData.data.result;
				response(result);
			}

			function handleError(response) {
				console.error(response);
				alert('ERROR');
			}
		},
		autoFocus: true,
		select: function(event, ui) {


			var sys_id = ui.item.id;
			var name = ui.item.value;

			if (sys_id != null && sys_id.trim().length > 1) {
				c.data.stockroom.owner = name;
				c.data.stockroom.ownerId = sys_id;
			} else {
				c.data.stockroom.owner = "";
				c.data.stockroom.ownerId = "";
			}

			//$('#content').css('height', '550px');
			$scope.$apply();
		}
	});

	$scope.sort = function(keyname){
		$scope.sortKey = keyname;
		$scope.reverse = !$scope.reverse;
	};


	$scope.enableEdit = false;

	$scope.toggleEdit = function(){
		$scope.enableEdit = false;
		$log.log($scope.enableEdit)
	}

	$log.log("s : "+ c.data.stockroom);

	$scope.saveData = function(){
		insertStockroom("update", "Stockroom has been updated successfully!")
		$scope.enableEdit = false;
	}

	$scope.$watch('c.data.stockroom.owner', function(){
		$log.log("test")
		$log.log(c.data.stockroom.ownerId)
		if(c.data.stockroom.ownerId == "" || c.data.stockroom.ownerId == null){
			c.data.stockroom.owner = c.data.reset.owner;
			c.data.stockroom.ownerId = c.data.reset.ownerId;
		}
	});



	function insertStockroom(method, msg){
		c.data.stockroom.method = method;

		etrackingAddStockroom.addStockroom(c.data.stockroom)
			.then(function(res){

			$mdDialog.show(
				$mdDialog.alert()
				.parent(angular.element(document.querySelector('#popupContainer')))
				.clickOutsideToClose(true)
				.title(msg)
				.ok('OK')
			);

			$log.log(res);
		}, function(err){
			$log.log(err);
			alert("ERROR");
		});
	}

	$scope.doTheBack = function() {
		window.history.back();
	};

	function loadAssets(){
		$scope.assetGridOptions = {
			columnDefs: [
				{headerName: "Name", field: "name", width: 150, sortable: true, filter: true},
				{headerName: "Type", field: "type", width: 150,  sortable: true, filter: true},
				{headerName: "Barcode", field: "barcode", width: 100,  sortable: true, filter: true},
				{headerName: "Description", field: "description", width: 200,  sortable: true, filter: true},
				{headerName: "Owner", field: "owner", width:130,  sortable: true, filter: true},
				{headerName: "Quantity", field: "quantity", width: 80},
				{headerName: "Actions", width: 300, cellRenderer: actions}
			],
			defaultColDef: {
				resizable: true,
				autoHeight: true,
				cellClass: 'white-space-normal'
			},
			pagination: true,
			paginationPageSize: 5,
			rowData: c.data.assets,
			angularCompileRows: true,
			domLayout: 'autoHeight'
		};
		function actions(){	
			return '<md-button  class="md-raised small-button"  ui-sref="view_asset_details({id: data.id, from: '+"'view_stockroom_details'"+'})">View</md-button> <span> </span>' +
				'<md-button ng-show="c.data.admin"  class="md-raised small-button"  ui-sref="checkout_asset({id: data.id})">Checkout</md-button> <span> </span>'+
				'<md-button ng-show="c.data.admin"  class="md-raised small-button"  ui-sref="transfer_asset({id: data.id})">Transfer</md-button>';
		}
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>
.ag-cell &gt; span {
  margin-top: 1.5rem;
}

.ag-cell {
  line-height: 20px;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>etrack_display_stockroom</id>
        <internal>false</internal>
        <link/>
        <name>Etrack Display Stockroom</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	data.admin = gs.getUser().isMemberOf("ETracking_Admin");
	var id = "";
	data.stockroom = {};
	data.assets = [];
	data.reset = {};

	if (input && input.id) {
		id = input.id.toString();
		var stockroom = new GlideRecord('x_naci_e_tracking_stock_room');
		stockroom.addQuery("sys_id", id);
		stockroom.query();
		stockroom.next();
		data.stockroom.id = stockroom.sys_id.toString();
		data.stockroom.name = stockroom.name.toString();
		data.stockroom.location = stockroom.location.sys_id.toString();
		data.stockroom.description = stockroom.description.toString();
		data.stockroom.owner = stockroom.owner.name.toString();
		data.stockroom.type = stockroom.type.sys_id.toString();
		data.stockroom.ownerId = stockroom.owner.sys_id.toString();
		data.reset.owner = data.stockroom.owner;
		data.reset.ownerId = data.stockroom.ownerId;
	}

	data.types = [];
	var stockroomTypes = new GlideRecord('x_naci_e_tracking_stockroom_type');
	stockroomTypes.orderBy("name");
	stockroomTypes.query();

	while (stockroomTypes.next()){
		var item = {};
		item.id = stockroomTypes.sys_id.toString();
		item.name = stockroomTypes.name.toString();
		data.types.push(item)
	}

	data.locations = [];
	var locations = new GlideRecord('x_naci_e_tracking_location');
	locations.orderBy('name');
	locations.query();
	while(locations.next()){
		var item = {};
		item.id = locations.sys_id.toString();
		item.name = locations.name.toString();
		data.locations.push(item);
	}

	var asset = new GlideRecord('x_naci_e_tracking_etrack_assets');
	asset.orderBy('name');
	asset.query();
	while(asset.next()){
		var item1 = {};
		item1.id = asset.sys_id.toString();
		item1.name = asset.model.name.toString();
		item1.type = asset.asset_type.toString();
		item1.barcode = asset.barcode.toString();
		item1.owner = asset.owner.name.toString();
		item1.quantity = asset.quantity.toString();
		item1.description = asset.model.description.toString();
		if(parseInt(item1.quantity) > 0 && asset.stockroom.name.toString() == data.stockroom.name){
			data.assets.push(item1);
		}
	}












})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>abdullahz2@nih.gov</sys_created_by>
        <sys_created_on>2019-03-12 18:36:51</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>3364dcdfdb44f340b86770c08c961905</sys_id>
        <sys_mod_count>196</sys_mod_count>
        <sys_name>Etrack Display Stockroom</sys_name>
        <sys_package display_value="NCI Equipment Tracking System" source="x_naci_e_tracking">0d1eac28dbbfaf0054d8ff621f9619b2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NCI Equipment Tracking System">0d1eac28dbbfaf0054d8ff621f9619b2</sys_scope>
        <sys_update_name>sp_widget_3364dcdfdb44f340b86770c08c961905</sys_update_name>
        <sys_updated_by>abdullahz2@nih.gov</sys_updated_by>
        <sys_updated_on>2019-05-03 18:43:15</sys_updated_on>
        <template><![CDATA[<div ng-controller="c" layout="column" ng-cloak>
  <md-card>
    <md-toolbar>
      <div class="md-toolbar-tools">
        <h2 flex md-truncate>Stockroom Details</h2>
      </div>
    </md-toolbar>
    <md-card-content>

      <form name="userForm">

        <div layout="column" ng-class="{'disabledForm': !enableEdit}">
          <br>
          <md-input-container class="md-block" flex-gt-sm class="disabledForm">
            <label>Name</label>
            <input required name="name" ng-model="c.data.stockroom.name" ng-disabled="true" />
          </md-input-container>
          <md-input-container class="md-block">
            <label>Description</label>
            <textarea ng-model="c.data.stockroom.description" required md-maxlength="150" rows="1" md-select-on-focus  ng-disabled="!enableEdit"></textarea>
          </md-input-container>
          <md-input-container class="md-block" flex-gt-sm>
            <label>Location</label>
            <md-select required ng-model="c.data.stockroom.location" ng-disabled="!enableEdit">
              <md-option ng-repeat="location in c.data.locations" value="{{location.id}}">
                {{location.name}}
              </md-option>
            </md-select >
          </md-input-container>
          
    
          

          <md-input-container class="md-block" flex-gt-sm>
            <label>Owner Custodian</label>
            <input id="ownerName" required name="stopAC" ng-model="c.data.stockroom.owner" ng-model-options="{ updateOn: 'blur' }"  ng-disabled="!enableEdit"/>
             <div ng-messages="userForm.stopAC.$error">
              <div ng-message="required">
                Please select a valid owner
              </div>
            </div>
          </md-input-container>

          <md-input-container class="md-block" flex-gt-sm>
            <label>Type</label>
            <md-select required ng-model="c.data.stockroom.type" ng-disabled="!enableEdit">
              <md-option ng-repeat="type in c.data.types" value="{{type.id}}" >
                {{type.name}}
              </md-option>
            </md-select >
          </md-input-container>
        </div>
      </form>
      <br>
      <div class="d-flex justify-content-center">
        <md-button ng-show="c.data.admin == true && !enableEdit" class="md-raised md-primary" ng-click="enableEdit = true">Edit</md-button>
        <md-button 
                   type="submit" 
                   ng-disabled="userForm.$invalid" 
                   ng-click="userForm.$valid && saveData()"
                   ng-show="c.data.admin == true && enableEdit" 
                   class="md-raised md-primary" 
                   >Update</md-button>
        <!--md-button ng-href="#!/{{backPageId}}" class="md-raised">Back</md-button-->
        <md-button ng-click="doTheBack()" class="md-raised">Back</md-button>
      </div>
      <br>
      <h4>Assets in Stockrooms</h4>
      <div ag-grid="assetGridOptions" class="ag-theme-material"></div>


      <!--div>
<div class="panel margin-bottom-small">
<div class="panel-heading blue-panel" role="tab" id="heading_savedItems">
<h1 class="h4 panel-title">
<a role="button" data-toggle="collapse" data-target="#collapseAssets" aria-expanded="true" aria-controls="collapseAssets">
<span class="accordion_icon"><i class="fa fa-minus-square"></i></span> Assets <span class="badge" id="ritm_count" >{{(c.data.assets|filter:search).length}}</span>
</a>
</h1>
</div>
<div ng-if="c.data.assets.length > 0" id="collapseAssets" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="heading_savedItems">
<table class="table table-bordered table-striped table-condensed">
<tr>
<th ng-click="sort('name')">Name<span class="glyphicon sort-icon" ng-show="sortKey=='name'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th ng-click="sort('type')">Type<span class="glyphicon sort-icon" ng-show="sortKey=='type'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th ng-click="sort('barcode')">Barcode<span class="glyphicon sort-icon" ng-show="sortKey=='barcode'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th ng-click="sort('description')">Description<span class="glyphicon sort-icon" ng-show="sortKey=='description'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th ng-click="sort('owner')">Owner<span class="glyphicon sort-icon" ng-show="sortKey=='owner'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th ng-click="sort('quantity')">Quantity<span class="glyphicon sort-icon" ng-show="sortKey=='quantity'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th>Actions</th>
</tr>
<tr dir-paginate="data in c.data.assets|filter:search|orderBy:sortKey:reverse|itemsPerPage:pageSize" pagination-id="assetsDataPagination">
<td class="ritm_cat_item">{{data.name}}</td>
<td class="ritm_cat_item">{{data.type}}</td>
<td class="ritm_number">{{data.barcode}}</td>
<td class="ritm_cat_item">{{data.description}}</td>
<td class="ritm_cat_item">{{data.owner}}</td>
<td class="ritm_cat_item">{{data.quantity}}</td>
<td>
<md-button  class="md-raised"  ui-sref="view_asset_details({id: data.id, from: 'view_asset_details'})">View</md-button>
<md-button ng-show="c.data.admin"  class="md-raised"  ui-sref="checkout_asset({id: data.id})">Checkout</md-button>
<md-button ng-show="c.data.admin"  class="md-raised"  ui-sref="transfer_asset({id: data.id})">Transfer</md-button>
</td>

</tr>
</table>
<div>
<table width="100%" border="0">
<tr>
<td width="70%">
<dir-pagination-controls pagination-id="assetsDataPagination" direction-links="true" boundary-links="true"></dir-pagination-controls>
</td>
<td width="25%" align="right">
<label for="page-size">Items per page&#160;&#160;</label>
</td>
<td width="5%" align="right">
<select class="form-control" id="page-size" ng-model="pageSize" ng-init="pageSize='5'" style="width:80px;">
<option value="5">5</option>
<option value="10">10</option>
<option value="15">15</option>
<option value="20">20</option>
</select>
</td>
</tr>
</table>
</div>
</div>
</div>
</div-->
    </md-card-content>
  </md-card>
</div>]]></template>
    </sp_widget>
</record_update>
