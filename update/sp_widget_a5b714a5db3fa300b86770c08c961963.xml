<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope, spUtil, spModal, $http, h) {
	/* widget controller */
	var c = this;
	loadAssetTable();
	loadAssetsCheckedOut();
	loadAssetsInTrasnfer();
	c.data.gridSizeAssets = 10;
	c.data.gridSizeCheckOut = 10;
	c.data.gridSizeTransfer = 10;
	c.data.gridSizes = [10,20,30,50]

	$scope.$watch('c.data.gridSizeAssets', function() {
		$scope.assetGridOptions.api.paginationSetPageSize(Number(c.data.gridSizeAssets));
	});
	$scope.$watch('c.data.gridSizeCheckOut', function() {
		$scope.assetCheckedOutGridOptions.api.paginationSetPageSize(Number(c.data.gridSizeCheckOut));
	});
	$scope.$watch('c.data.assetInTrasnfer', function() {
		$scope.assetGridOptions.api.paginationSetPageSize(Number(c.data.gridSizeTransfer));
	});

	/*------------------------------------------------*/
	function loadAssetTable(){
		$scope.assetGridOptions = {
			defaultColDef: {
				resizable: true,
				autoHeight: true,
				cellClass: 'white-space-normal'
			},
			pagination: true,
			paginationPageSize: 10,
			columnDefs: [
				{headerName: "Name", field: "name", width: 150, sortable: true, filter: true},
				{headerName: "Manufacture", field: "manufacture", width: 150,  sortable: true, filter: true},
				{headerName: "Description", field: "description", width: 200,  sortable: true, filter: true},
				{headerName: "Model Number", field: "modelNumber", width:150,  sortable: true, filter: true},
				{
					autoHeight: true,
					headerName: "Stockroom(s)", 
					width: 200, 
					cellRenderer: function (args){
						var items = args.data.stockrooms;
						/* we can use a declarative way of creating dom elements (eg: hyperscript) */
						return h('ul', null, items.map(function(item) {
							return h('li', null, [
								h('a', {href: '#!/display-stockroom/' + item.id}, item.name)
							])
						}));
						//return '<ul><li ng-repeat="stockroom in data.stockrooms"><a ui-sref="display_stockroom({id: stockroom.id})">{{stockroom.name}}</a></li></ul>';
					}
				},
				{headerName: "Quantity", field: "quantity", width: 100},
				{headerName: "Actions", width: 110, cellRenderer: function (){
					return '<md-button class="md-raised small-button"  ui-sref="display_asset({id: data.id})" > View</md-button>'
				}}
			],
			domLayout: 'autoHeight',
			rowHeight: 100,
			angularCompileRows: true,
			rowData: c.data.assets,
			onColumnResized: function resetRowHeight(){
				setTimeout(function() {
					$scope.testGridOptions.api.resetRowHeights();
				}, 0);
			}
		}

		setTimeout(function() {
			$scope.assetGridOptions.api.resetRowHeights();
		}, 100);
	}


	function loadAssetsCheckedOut(){
		$scope.assetCheckedOutGridOptions = {
			columnDefs: [
				{headerName: "Name", field: "name", width: 150, sortable: true, filter: true},
				{headerName: "Checked Out By", field: "checkedOutBy", width: 160,  sortable: true, filter: true},
				{headerName: "Checked Out Time", field: "checkOutTime", width: 200,  sortable: true, filter: true},
				{headerName: "Checked Out From", field: "stockroom", width:170,  sortable: true, filter: true, 	autoHeight: true},
				{headerName: "Quantity", field: "quantity", width:100},
				{headerName: "Owner", field: "owner", width: 100, sortable: true, filter: true},
				{headerName: "Actions", width: 180, cellRenderer: viewCheckedOutAsset}
			],
			defaultColDef:{
				resizable: true,
				autoHeight: true,
				cellClass: 'white-space-normal'
			},
			pagination: true,
			paginationPageSize: 10,
			rowData: c.data.checkedOutAssests.map(function(item){
				item.checkOutTime = moment(item.checkOutTime);
				return item
			}),
			angularCompileRows: true,
			domLayout: 'autoHeight',
			rowHeight: 100,
			onColumnResized: function resetRowHeight(){
				setTimeout(function() {
					$scope.assetCheckedOutGridOptions.api.resetRowHeights();
				}, 0);
			}
		}

		function viewCheckedOutAsset(){
			return '<md-button class="md-raised small-button" ui-sref="checkout_asset_details({id: data.id})">View</md-button><span> </span>' +
				'<md-button class="md-raised small-button" ng-show="c.data.admin" ui-sref="checkin_asset({id: data.id})">Check in</md-button> '
		}
	}

	function loadAssetsInTrasnfer(){
		$scope.assetInTrasnfer = {
			columnDefs: [
				{headerName: "Name", field: "name", width: 150, sortable: true, filter: true},
				{headerName: "From Stockroom", field: "fromStockroom", width: 160,  sortable: true, filter: true},
				{headerName: "To Stockroom", field: "toStockroom", width: 160,  sortable: true, filter: true},
				{headerName: "Assigned To", field: "assignTo", width:150,  sortable: true, filter: true},
				{headerName: "Quantity", field: "quantity", width:100},
				{headerName: "Start Time", field: "transferStartTime", sortable: true, width: 150},
				{headerName: "Actions", width: 190, cellRenderer: viewAssetInTrasnfer}
			],
			defaultColDef: {
				resizable: true,
				autoHeight: true,
				cellClass: 'white-space-normal'
			},
			pagination: true,
			paginationPageSize: 10,
			rowData:  c.data.assetsInTransfer.map(function(item){
				item.transferStartTime = moment(item.transferStartTime);
				return item
			}),
			angularCompileRows: true,
			domLayout: 'autoHeight'
		};

		function viewAssetInTrasnfer(){
			return '<md-button class="md-raised small-button" ui-sref="transfer_asset_detials({id: data.id})">View</md-button> <span> </span>' +
				'<md-button class="md-raised small-button"  ng-show="c.data.admin" ui-sref="complete_asset_transfer({id: data.id})">Complete</md-button>'
		}
	}

	spUtil.recordWatch($scope, "x_naci_e_tracking_model", "", function(name, data) {  
		spUtil.update($scope);
		loadAssetTable();
	});
	spUtil.recordWatch($scope, "x_naci_e_tracking_assets_check_out", "", function(name, data) {  
		spUtil.update($scope);
		loadAssetsCheckedOut();
	});
	spUtil.recordWatch($scope, "x_naci_e_tracking_etrack_assets", "", function(name, data) {  
		spUtil.update($scope);
		loadAssetTable();
	});
	spUtil.recordWatch($scope, "x_naci_e_tracking_assdets_transfer", "", function(name, data) {  
		spUtil.update($scope);
		loadAssetsInTrasnfer();

	});

}]]></client_script>
        <controller_as>c</controller_as>
        <css>
.ag-theme-material ul &gt; li {
  line-height: 20px;
}

.ag-theme-material ul {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.ag-cell &gt; span {
  display: block !important;
}
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>etrack_assets</id>
        <internal>false</internal>
        <link/>
        <name>Etrack Assets</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

	data.assets = [];
	data.checkedOutAssests = [];
	data.assetsInTransfer = [];
	data.test = {};
	data.admin = gs.getUser().isMemberOf("ETracking_Admin")

	var model = new GlideRecord("x_naci_e_tracking_model");
	model.orderBy("name");
	model.query();
	while(model.next()){
		var item = {};
		item.id = model.sys_id.toString();
		item.name = model.name.toString();
		item.manufacture = model.manufacture.name.toString();
		item.description = model.description.toString();
		item.modelNumber = model.model_number.toString();
		item.quantity = getQuantity(model.sys_id);
		//item.stockrooms = getStockroons(model.sys_id);
		item.stockrooms = getStockrooms(model.sys_id);
    if(item.quantity != 0){
			data.assets.push(item);	
		}
	}

	var checkOut = new GlideRecord("x_naci_e_tracking_assets_check_out");
	checkOut.addNullQuery("checkin_time");
	checkOut.orderByDesc("checkout_time");
	checkOut.query();
	while(checkOut.next()){
		var item = {};
		item.name = checkOut.asset.model.name.toString();
		item.checkedOutBy = checkOut.current_user.name.toString();
		item.checkOutTime = checkOut.checkout_time.toString();
		item.quantity = checkOut.quantity.toString();
		item.id = checkOut.sys_id.toString();
		item.owner = checkOut.asset.owner.name.toString();
		item.stockroom = checkOut.asset.stockroom.name.toString();
		data.checkedOutAssests.push(item);
	}

	function getQuantity(id){
		var quantity = 0;
		var asset = new GlideRecord("x_naci_e_tracking_etrack_assets");
		asset.addQuery("model.sys_id", id);
		asset.query();
		while(asset.next()){
			quantity = quantity + parseInt(asset.quantity);
		}
		return quantity;
	}
	
	/**function getStockroons(id){
		var rooms = [];
		var asset = new GlideRecord("x_naci_e_tracking_etrack_assets");
		    asset.addQuery("model.sys_id", id);
			  asset.orderBy("stockroom.name");
		    asset.query();
		while(asset.next()){
			var item = {};
			item.id = asset.stockroom.sys_id.toString();
			item.name = asset.stockroom.name.toString();
			item.
			rooms.push(item);
		}
		
		return rooms;
	}*/
	
	function getStockrooms(id){
		var rooms = [];
		var asset = new GlideRecord("x_naci_e_tracking_etrack_assets");
		    asset.addQuery("model.sys_id", id);
			  asset.orderBy("stockroom.name");
		    asset.query();
		while(asset.next()){
			var item = {};
			item.id = asset.stockroom.sys_id.toString();
			item.name = asset.stockroom.name.toString();
			if(parseInt(asset.quantity) > 0){
				rooms.push(item);
			}
		}
		return uniq(rooms, 'id');; 
	}
	 function uniq(a, param){
        return a.filter(function(item, pos, array){
            return array.map(function(mapItem){ return mapItem[param]; }).indexOf(item[param]) === pos;
        })
    }

    
	
	var transferAsset = new GlideRecord("x_naci_e_tracking_assdets_transfer");
	transferAsset.addNullQuery("transfer_complete_time");
	transferAsset.orderByDesc("transfer_start_time");
	transferAsset.query();
	while(transferAsset.next()){
		var item = {};
		item.name = transferAsset.asset.model.name.toString();
		item.assignTo = transferAsset.current_user.name.toString();
		item.transferStartTime = transferAsset.transfer_start_time.toString();
		item.quantity = transferAsset.quantity.toString();
		item.fromStockroom = transferAsset.from.name.toString();
		item.toStockroom = transferAsset.to.name.toString();
		item.id = transferAsset.sys_id.toString();
		data.assetsInTransfer.push(item);
	}







})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>zhoujim@nih.gov</sys_created_by>
        <sys_created_on>2019-02-22 22:06:06</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>a5b714a5db3fa300b86770c08c961963</sys_id>
        <sys_mod_count>1248</sys_mod_count>
        <sys_name>Etrack Assets</sys_name>
        <sys_package display_value="NCI Equipment Tracking System" source="x_naci_e_tracking">0d1eac28dbbfaf0054d8ff621f9619b2</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="NCI Equipment Tracking System">0d1eac28dbbfaf0054d8ff621f9619b2</sys_scope>
        <sys_update_name>sp_widget_a5b714a5db3fa300b86770c08c961963</sys_update_name>
        <sys_updated_by>abdullahz2@nih.gov</sys_updated_by>
        <sys_updated_on>2019-04-24 17:16:51</sys_updated_on>
        <template><![CDATA[<div >
  <md-card>
    <md-toolbar>
      <div class="md-toolbar-tools">
        <h2 flex md-truncate>Assets</h2>
        <md-button ui-sref="add_assets" ng-show="c.data.admin"  class="md-raised">Add Assets</md-button>
      </div>
    </md-toolbar>
    <md-card-content>
      <md-card-title-text>
        <span class="md-headline">Assets in stock</span>

        <span style="float: right;">
          Page Size:
          <select  ng-model="c.data.gridSizeAssets"  ng-init="c.data.gridSizeAssets='10'">
            <option ng-repeat="value in c.data.gridSizes">{{value}}</option>
          </select>
        </span>
      </md-card-title-text>
      <md-divider></md-divider>
      <div ag-grid="assetGridOptions" class="ag-theme-material" style="height: 100%"></div>

      <br>
      
      <md-card-title-text>
        <span class="md-headline">Checked out assets</span>
        <span style="float: right;">
          Page Size:
          <select  ng-model="c.data.gridSizeCheckOut" ng-init="c.data.gridSizeCheckOut='10'" >
            <option ng-repeat="value in c.data.gridSizes">{{value}}</option>
          </select>
        </span>
      </md-card-title-text>
      <md-divider></md-divider>
      <div ag-grid="assetCheckedOutGridOptions" class="ag-theme-material" style="height: 100%"></div>

      <br>
      <md-card-title-text>
        <span class="md-headline">Assets in transfer</span>
        <span style="float: right;">
          Page Size:
          <select  ng-model="c.data.gridSizeTransfer" ng-init="c.data.gridSizeTransfer='10'" >
            <option ng-repeat="value in c.data.gridSizes">{{value}}</option>
          </select>
        </span>
      </md-card-title-text>
      <md-divider></md-divider>
      <div ag-grid="assetInTrasnfer" class="ag-theme-material"></div>
    </md-card-content>
  </md-card>
</div>

<!--
<div ng-controller="c" ng-cloak>
<md-card>
<md-toolbar>
<div class="md-toolbar-tools">
<h2 flex md-truncate>Assets</h2>
</div>
</md-toolbar>
<md-card-content>

<div>

<div layout-gt-sm="row">
<md-input-container class="md-block" flex-gt-sm>
<label>Name</label>
<input name="stopAC" ng-model="assetFilter.name" />
</md-input-container>
<div flex="5" hide-xs hide-sm></div>
<md-input-container class="md-block" flex-gt-sm>
<label>Manufacture</label>
<input ng-model="assetFilter.manufacture" />
</md-input-container>

<div flex="5" hide-xs hide-sm></div>
<md-input-container class="md-block" flex-gt-sm>
<label>Description</label>
<input ng-model="assetFilter.description" />
</md-input-container>

<div flex="5" hide-xs hide-sm></div>

<md-input-container class="md-block" flex-gt-sm>
<label>Model Number</label>
<input ng-model="assetFilter.modelNumber" />
</md-input-container>
<div flex="5" hide-xs hide-sm></div>
<div layout="row" layout-align="end center" ng-show="c.data.admin">
<md-button ui-sref="add_assets" class="md-raised md-primary">Add Assets</md-button>
</div>

<br hide-md hide-lg>
</div>
<div class="panel margin-bottom-small table-responsive responsive">
<div class="panel-heading blue-panel" role="tab" id="heading_savedItems">
<h1 class="h4 panel-title">
<a role="button" data-toggle="collapse" data-target="#collapseAssets" aria-expanded="true" aria-controls="collapseAssets">
<span class="accordion_icon"><i class="fa fa-minus-square"></i></span> Assets in stock <span class="badge" id="ritm_count" >{{(c.data.assets|filter:assetFilter).length}}</span>
</a>
</h1>
</div>
<div ng-if="c.data.assets.length > 0" id="collapseAssets" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="heading_savedItems">
<table class="table table-bordered table-striped table-condensed">
<tr>
<th ng-click="sort('name')">Name<span class="glyphicon sort-icon" ng-show="sortKey=='name'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th ng-click="sort('manufacture')">Manufacture<span class="glyphicon sort-icon" ng-show="sortKey=='manufacture'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th ng-click="sort('description')">Description<span class="glyphicon sort-icon" ng-show="sortKey=='description'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th ng-click="sort('modelNumber')">Model Number<span class="glyphicon sort-icon" ng-show="sortKey=='modelNumber'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th>Stockroom(s)<span class="glyphicon sort-icon" ></span></th>
<th ng-click="sort('quantity')">Quantity<span class="glyphicon sort-icon" ng-show="sortKey=='quantity'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th>Actions</th>
</tr>
<tr dir-paginate="data in c.data.assets|filter:assetFilter|orderBy:sortKey:reverse|itemsPerPage:pageSize" pagination-id="assetsDataPagination">
<td class="ritm_number">{{data.name}}</td>
<td class="ritm_cat_item">{{data.manufacture}}</td>
<td class="ritm_cat_item">{{data.description}}</td>
<td class="ritm_cat_item">{{data.modelNumber}}</td>
<td class="ritm_cat_item"> <md-button ng-repeat="stockroom in data.stockrooms" class="md-primary" ui-sref="display_stockroom({id: stockroom.id})">{{stockroom.name}}<span ng-hide="$last">, </span> </md-button></td>
<td class="ritm_cat_item">{{data.quantity}}</td>
<td>
<md-button class="md-raised"  ui-sref="display_asset({id: data.id})" > View</md-button>
</td>

</tr>
</table>
<div>
<table width="100%" border="0">
<tr>
<td width="70%">
<dir-pagination-controls pagination-id="assetsDataPagination" direction-links="true" boundary-links="true"></dir-pagination-controls>
</td>
<td width="25%" align="right">
<label for="page-size">Items per page&#160;&#160;</label>
</td>
<td width="5%" align="right">
<select class="form-control" id="page-size" ng-model="pageSize" ng-init="pageSize='5'" style="width:80px;">
<option value="5">5</option>
<option value="10">10</option>
<option value="15">15</option>
<option value="20">20</option>
</select>
</td>
</tr>
</table>
</div>
</div>
</div>
</div>



<div>
<div layout-gt-sm="row">
<div>
<md-input-container class="md-block" flex-gt-sm>
<label>Search</label>
<input ng-model="checkedoutFilter" />
</md-input-container>
</div>
<br hide-md hide-lg>
</div>   
<div class="panel margin-bottom-small table-responsive">
<div class="panel-heading blue-panel" role="tab" id="heading_savedItems">
<h1 class="h4 panel-title">
<a role="button" data-toggle="collapse" data-target="#collapsecheckedOutAssets" aria-expanded="true" aria-controls="collapsecheckedOutAssets">
<span class="accordion_icon"><i class="fa fa-minus-square"></i></span> Checked out Assets <span class="badge" id="ritm_count">{{(c.data.checkedOutAssests|filter:checkedoutFilter).length}}</span>
</a>
</h1>
</div>

<div ng-if="c.data.checkedOutAssests.length > 0" id="collapsecheckedOutAssets" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="heading_savedItems">
<table class="table table-bordered table-striped table-condensed">
<tr>
<th ng-click="cSort('name')">Name<span class="glyphicon sort-icon" ng-show="cSortKey=='name'" ng-class="{'glyphicon-chevron-up':cReverse,'glyphicon-chevron-down':!cReverse}"></span></th>
<th ng-click="cSort('checkedOutBy')">Checked Out By<span class="glyphicon sort-icon" ng-show="cSortKey=='checkedOutBy'" ng-class="{'glyphicon-chevron-up':cReverse,'glyphicon-chevron-down':!cReverse}"></span></th>
<th ng-click="cSort('checkOutTime')">Checked Out Time<span class="glyphicon sort-icon" ng-show="cSortKey=='checkOutTime'" ng-class="{'glyphicon-chevron-up':cReverse,'glyphicon-chevron-down':!cReverse}"></span></th>
<th ng-click="cSort('checkedOutFrom')">Checked Out From<span class="glyphicon sort-icon" ng-show="cSortKey=='checkedOutFrom'" ng-class="{'glyphicon-chevron-up':cReverse,'glyphicon-chevron-down':!cReverse}"></span></th>
<th ng-click="cSort('quantity')">Quantity<span class="glyphicon sort-icon" ng-show="cSortKey=='quantity'" ng-class="{'glyphicon-chevron-up':cReverse,'glyphicon-chevron-down':!cReverse}"></span></th>
<th ng-click="cSort('owner')">Owner<span class="glyphicon sort-icon" ng-show="cSortKey=='owner'" ng-class="{'glyphicon-chevron-up':cReverse,'glyphicon-chevron-down':!cReverse}"></span></th>
<th ng-show="false" ng-click="cSort('manufacture')">Manufacture<span class="glyphicon sort-icon" ng-show="cSortKey=='manufacture'" ng-class="{'glyphicon-chevron-up':cReverse,'glyphicon-chevron-down':!cReverse}"></span></th>
<th>Actions</th>
</tr>
<tr dir-paginate="data in c.data.checkedOutAssests|filter:checkedoutFilter|orderBy:cSortKey:cReverse|itemsPerPage:pageSize" pagination-id="checkedOutAssetsDataPagination">
<td class="ritm_number">{{data.name}}</td>
<td class="ritm_cat_item">{{data.checkedOutBy}}</td>
<td class="ritm_cat_item">{{data.checkOutTime.format('YYYY/MM/DD, h:mm:ss a')}}</td>
<td class="ritm_cat_item">{{data.stockroom}}</td>
<td class="ritm_cat_item">{{data.quantity}}</td>
<td class="ritm_cat_item">{{data.owner}}</td>
<td ng-show="false" class="ritm_cat_item"></td>
<td>
<md-button class="md-raised" ui-sref="checkout_asset_details({id: data.id})">View</md-button> 
<md-button  ng-show="c.data.admin" class="md-raised" ui-sref="checkin_asset({id: data.id})">Check in</md-button> 
</td>
</tr>
</table>
<div>
<table width="100%" border="0">
<tr>
<td width="70%">
<dir-pagination-controls pagination-id="checkedOutAssetsDataPagination" direction-links="true" boundary-links="true"></dir-pagination-controls>
</td>
<td width="25%" align="right">
<label for="page-size">Items per page&#160;&#160;</label>
</td>
<td width="5%" align="right">
<select class="form-control" id="page-size" ng-model="pageSize" ng-init="pageSize='5'" style="width:80px;">
<option value="5">5</option>
<option value="10">10</option>
<option value="15">15</option>
<option value="20">20</option>
</select>
</td>
</tr>
</table>
</div>
</div>
</div>
</div>


<div>

<div layout-gt-sm="row">
<div>
<md-input-container class="md-block" flex-gt-sm>
<label>Search</label>
<input ng-model="transferFilter" />
</md-input-container>
</div>

<br hide-md hide-lg>
</div>    
<div class="panel margin-bottom-small table-responsive">
<div class="panel-heading blue-panel" role="tab" id="heading_savedItems_test">
<h1 class="h4 panel-title">
<a role="button" data-toggle="collapse" data-target="#collapseassetsInTransfer" aria-expanded="true" aria-controls="collapseassetsInTransfer">
<span class="accordion_icon"><i class="fa fa-minus-square"></i></span> Assets in Transfer <span class="badge" id="ritm_count">{{(c.data.assetsInTransfer|filter:transferFilter).length}}</span>
</a>
</h1>
</div>
<div ng-if="c.data.assetsInTransfer.length > 0" id="collapseassetsInTransfer" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="heading_savedItems">
<table class="table table-bordered table-striped table-condensed">
<tr>
<th ng-click="tSort('name')">Name<span class="glyphicon sort-icon" ng-show="tSortKey=='name'" ng-class="{'glyphicon-chevron-up':tReverse,'glyphicon-chevron-down':!tReverse}"></span></th>
<th ng-click="tSort('fromStockroom')">From Stockroom<span class="glyphicon sort-icon" ng-show="tSortKey=='fromStockroom'" ng-class="{'glyphicon-chevron-up':tReverse,'glyphicon-chevron-down':!tReverse}"></span></th>
<th ng-click="tSort('toStockroom')">To Stockroom<span class="glyphicon sort-icon" ng-show="tSortKey=='toStockroom'" ng-class="{'glyphicon-chevron-up':tReverse,'glyphicon-chevron-down':!tReverse}"></span></th>
<th ng-click="tSort('assignTo')">Assigned To<span class="glyphicon sort-icon" ng-show="tSortKey=='assignTo'" ng-class="{'glyphicon-chevron-up':tReverse,'glyphicon-chevron-down':!tReverse}"></span></th>
<th ng-click="tSort('quantity')">Quantity<span class="glyphicon sort-icon" ng-show="tSortKey=='quantity'" ng-class="{'glyphicon-chevron-up':reverse,'glyphicon-chevron-down':!reverse}"></span></th>
<th ng-click="tSort('transferStartTime')">Start Time<span class="glyphicon sort-icon" ng-show="tSortKey=='transferStartTime'" ng-class="{'glyphicon-chevron-up':tReverse,'glyphicon-chevron-down':!tReverse}"></span></th>
<th>Actions</th>
</tr>
<tr dir-paginate="data in c.data.assetsInTransfer|filter:transferFilter|orderBy:tSortKey:tReverse|itemsPerPage:pageSize" pagination-id="assetsInTransferDataPagination">
<td class="ritm_number">{{data.name}}</td>
<td class="ritm_cat_item">{{data.fromStockroom}}</td>
<td class="ritm_cat_item">{{data.toStockroom}}</td>
<td class="ritm_number">{{data.assignTo}}</td>
<td class="ritm_cat_item">{{data.quantity}}</td>
<td class="ritm_cat_item">{{data.transferStartTime.format('YYYY/MM/DD, h:mm:ss a')}}</td>

<td>

<md-button class="md-raised" ui-sref="transfer_asset_detials({id: data.id})">View</md-button> 
<md-button ng-show="c.data.admin" class="md-raised" ui-sref="complete_asset_transfer({id: data.id})">Complete</md-button> 
</td>
</tr>
</table>
<div>
<table  width="100%" border="0">
<tr>
<td width="70%">
<dir-pagination-controls pagination-id="assetsInTransferDataPagination" direction-links="true" boundary-links="true"></dir-pagination-controls>
</td>
<td width="25%" align="right">
<label for="page-size">Items per page&#160;&#160;</label>
</td>
<td width="5%" align="right">
<select class="form-control" id="page-size" ng-model="pageSize" ng-init="pageSize='5'" style="width:80px;">
<option value="5">5</option>
<option value="10">10</option>
<option value="15">15</option>
<option value="20">20</option>
</select>
</td>
</tr>
</table>
</div>
</div>
</div>
</div>
</md-card-content>
</md-card>
</div>
-->]]></template>
    </sp_widget>
</record_update>
